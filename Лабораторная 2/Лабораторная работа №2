# -*- coding: utf-8 -*-
"""Копия блокнота "PythonUrban_lab2.ipynb"

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GubBQKvhk9THG_ceROxHmAvlWMsez3Ng

# Итоговый проект. Улицы. Объекты культурного наследия.
"""

!pip install pandas
!pip install geopandas 
!pip install mapclassify
!pip install osmnx

import pandas as pd
import geopandas as gpd
import json
import requests
import osmnx as ox
import numpy as np

TILES = "CartoDB positron"  # Название подложки для карт

TERRITORY_NAME = "R367375"  # Петродворцовый район

KGIOP_FILE_URL = "https://raw.githubusercontent.com/KudrinEA1/Urban_Python_ITMO_labs/main/geojson%20%D1%81%D0%BB%D0%BE%D0%B8/architectural_structures.geojson"  # ссылка на слой с объектами культурного наследия
STREETS_FILE_URL = "https://raw.githubusercontent.com/KudrinEA1/Urban_Python_ITMO_labs/main/geojson%20%D1%81%D0%BB%D0%BE%D0%B8/streets.geojson"  # ссылка на слой с улицами

"""## Территория

### Загрузка территории из OSM (Extract)
"""

district = ox.geocode_to_gdf([TERRITORY_NAME], by_osmid=True)
district.explore(tiles="CartoDB positron")

"""## Улицы

### Загрузка файла с улицами (Extract)
"""

gdf = gpd.read_file(STREETS_FILE_URL, mask=district)
gdf.explore(tiles="CartoDB positron")

"""### Обработка данных с улицами (Transform)"""

gdf = gdf.dissolve(by="name")
gdf.explore(tiles="CartoDB positron")

"""### Сохранение слоя с улицами (Load)"""

df = pd.DataFrame(gdf)
df.index.names = ['Название улиц']

gdf.to_crs(4326).to_file('union_streets.geojson', driver='GeoJSON')

"""## Объекты культурного наследия

### Загрузка объектов культурного наследия (Extract)
"""

# TODO отфильтровать улицы по маске геометрии территории полученной ранее
gdf = gpd.read_file(KGIOP_FILE_URL, mask=district)
gdf.explore(tiles="CartoDB positron")

"""### Обработка объектов культурного наследия (Transform)"""

# TODO добавить два столбца lon и lat, в которых будут долгота и широта 

gdf

"""### Сохранение слоя с объектами культурного наследия (Load)"""

# TODO переименовать столбцы в русские названия, кроме столбца geometry
gdf.columns = ['Название улицы', 'Второе название улицы ', 'Городская функция', 'Тип здания', 'Долгота', 'Широта', 'Адресс', 'Описание', 'Атрибут 1', 'Атрибут 2', 'geometry',]

# TODO сохранить слой в географической проекции в формате GeoJSON
gdf.to_crs(4326).to_file('cultural_heritage_obj.geojson', driver='GeoJSON')
